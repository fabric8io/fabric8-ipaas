<!--

     Copyright 2005-2016 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.fabric8.ipaas.apps</groupId>
        <artifactId>fabric8-ipaas</artifactId>
        <version>2.2.94-SNAPSHOT</version>
    </parent>

    <artifactId>fabric8-msm</artifactId>
    <packaging>jar</packaging>

    <name>fabric8-msm</name>
    <description>Artemis configured for Microservices Messaging</description>

    <properties>
        <version.maven-surefire-plugin>2.15</version.maven-surefire-plugin>
        <guava.version>15.0</guava.version>
        <artemis.version>1.2.0</artemis.version>
        <spring-boot.version>1.3.0.RELEASE</spring-boot.version>
        <hibernate-version>4.1.0.Final</hibernate-version>
        <geronimo.jms.2.spec.version>1.0-alpha-2</geronimo.jms.2.spec.version>
        <fabric8.dockerUser>fabric8/</fabric8.dockerUser>
        <docker.image>${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>

        <docker.port.container.amq>${activemq.container.port}</docker.port.container.amq>


        <fabric8.service.name>fabric8-msm</fabric8.service.name>
        <fabric8.service.fabric8-msm.port>${activemq.service.port}</fabric8.service.fabric8-msm.port>
        <fabric8.service.fabric8-msm.containerPort>${activemq.container.port}</fabric8.service.fabric8-msm.containerPort>

        <fabric8.service.name>msm-cluster-discovery</fabric8.service.name>
        <fabric8.service.msm-cluster-discovery.port>9191</fabric8.service.msm-cluster-discovery.port>
        <fabric8.service.msm-cluster-discovery.headless>true</fabric8.service.msm-cluster-discovery.headless>

        <fabric8.label.component>artemis</fabric8.label.component>
        <fabric8.label.group>artemis</fabric8.label.group>
        <fabric8.label.provider>fabric8</fabric8.label.provider>
        <fabric8.iconRef>icons/activemq.svg</fabric8.iconRef>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- import fabric8 platfrom bom first -->
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project-bom-with-platform-deps</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <!-- Clashes with fabric8 logging -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>${hibernate-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-jms-client</artifactId>
            <version>${artemis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-selector</artifactId>
            <version>${artemis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-journal</artifactId>
            <version>${artemis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-core-client</artifactId>
            <version>${artemis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-server</artifactId>
            <version>${artemis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-openwire-protocol</artifactId>
            <version>${artemis.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-amqp-protocol</artifactId>
            <version>${artemis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-hornetq-protocol</artifactId>
            <version>${artemis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-mqtt-protocol</artifactId>
            <version>${artemis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-jms-server</artifactId>
            <version>${artemis.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <!-- Note: need to override guava version as leveldb has an issue with > 15.0 -->
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-arquillian</artifactId>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-assertions</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
            <version>1.0.0.CR8</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler plugin enforces Java 1.8 compatibility and activates annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <inherited>true</inherited>
                <configuration>
                    <argLine>-Djava.security.egd=file:/dev/./urandom</argLine>
                    <excludes>
                        <exclude>**/*KT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <mainClass>io.fabric8.msg.msm.Msm</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.version}</version>
                <executions>
                    <execution>
                        <id>json</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>json</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.image}</name>
                            <build>
                                <from>${docker.from}</from>
                                <assembly>
                                    <basedir>/app</basedir>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <env>
                                    <JAVA_APP_JAR>${project.build.finalName}.jar</JAVA_APP_JAR>
                                </env>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--
    Default sample commands:

    mvn -Pf8-build         ... build Docker images and create OpenShift deployment configs
    mvn -Pf8-deploy        ... f8-build + push to Docker registry + applying deployment config to OpenShift
    mvn -Pf8-local-deploy ... deployment for a single node setup without pushing to a registry

    For individual goal usage please consult the fabric8 documentation
    -->
    <profiles>
        <profile>
            <id>f8-build</id>
            <build>
                <defaultGoal>clean install docker:build fabric8:json</defaultGoal>
            </build>
        </profile>
        <profile>
            <id>f8-deploy</id>
            <properties>
                <fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
                <fabric8.recreate>true</fabric8.recreate>
            </properties>
            <build>
                <defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
            </build>
        </profile>
        <profile>
            <id>f8-local-deploy</id>
            <properties>
                <fabric8.recreate>true</fabric8.recreate>
            </properties>
            <build>
                <defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
            </build>
        </profile>
    </profiles>

</project>
